<?php

namespace AppBundle\Entity;

use Knp\Component\Pager\Paginator;
use Lexik\Bundle\FormFilterBundle\Filter\FilterBuilderUpdater;
use Lexik\Bundle\FormFilterBundle\Filter\Query\QueryInterface;
use Symfony\Component\Security\Core\Exception\AccessDeniedException;
use Symfony\Component\Form\FormInterface;

/**
 * PrispevekRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PrispevekRepository extends \Doctrine\ORM\EntityRepository
{

  private $paginator;
  private $filterBuilderUpdater;

  public function setPaginatorAndQueryUpdater(Paginator $paginator, FilterBuilderUpdater $filterBuilderUpdater)
  {
      $this->paginator = $paginator;
      $this->filterBuilderUpdater = $filterBuilderUpdater;
      return $this;
  }

  /**
   * @param $items_per_page
   * @param int $page
   * @return \Knp\Component\Pager\Pagination\PaginationInterface
   */
  public function findAllWithPaginator($items_per_page, $page = 1, FormInterface $filterForm, $stav, $user)
  {
      $queryBuilder = $this->createQueryBuilder('p')
          ->select(['p', 't', 'c'])
          ->leftJoin('p.tema', 't')
          ->join('p.casopis', 'c');

      switch ($stav) {
        case 0:
          if ($user->hasRole('ROLE_EDITOR') || $user->hasRole('ROLE_ADMIN')) { $queryBuilder->where('p.stav = 0'); }
          else { throw new AccessDeniedException('Přístup zamítnut'); }
          break;
        case 1:
          if ($user->hasRole('ROLE_RECENZENT') || $user->hasRole('ROLE_ADMIN')) { $queryBuilder->where('p.stav = 1'); }
          else { throw new AccessDeniedException('Přístup zamítnut'); }
          break;
        case 2:
          if ($user->hasRole('ROLE_REDAKTOR') || $user->hasRole('ROLE_ADMIN')) { $queryBuilder->where('p.stav = 2'); }
          else { throw new AccessDeniedException('Přístup zamítnut'); }
          break;
        case 3:
          if ($user->hasRole('ROLE_ADMIN')) { $queryBuilder->where('p.stav = 3'); }
          else { throw new AccessDeniedException('Přístup zamítnut'); }
          break;
        default:
          if ($user->hasRole('ROLE_EDITOR') || $user->hasRole('ROLE_ADMIN')) { $queryBuilder->where('p.stav = -1'); }
      }

      $this->filterBuilderUpdater->addFilterConditions($filterForm, $queryBuilder);

      return $this->paginator->paginate(
          $queryBuilder->getQuery(),
          $page,
          $items_per_page,
          [
              'defaultSortFieldName' => 'p.id',
              'defaultSortDirection' => 'DESC',
          ]
      );
  }
}
